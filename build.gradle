// Forge essentials

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

// Plugins

plugins {
    id 'idea'
}

apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0-1.16.x'
group = 'io.github.ramboxeu.techworks'
archivesBaseName = 'techworks'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

idea {

}

// Source sets

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }

        resources {
            srcDir 'src/main/resources'
            srcDir 'src/datagen/generated'
            exclude '.cache'
        }
    }

    // Datagens
    datagen {
        java {
            srcDir 'src/datagen/java'
//            include 'java'
//            exclude 'generated', 'resources'
        }

        resources {
            srcDir 'src/datagen/resources'
//            include 'resources'
//            exclude 'generated', 'java'
        }

        compileClasspath += project.sourceSets.main.output
        compileClasspath += project.sourceSets.main.compileClasspath
        runtimeClasspath += project.sourceSets.main.output
        runtimeClasspath += project.sourceSets.main.runtimeClasspath
    }
}

// Run configurations

minecraft {
    mappings channel: 'snapshot', version: "${mappings_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                techworks {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                techworks {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            environment 'target', 'fmluserdevdata'
            property 'forge.logging.console.level', 'debug'
            properties 'fml.earlyprogresswindow': 'false'

            args '--all', '--output', file('src/datagen/generated/'),
                    '--mod', 'techworks',
                    '--existing', sourceSets.main.resources.srcDirs[0]

            mods {
                techworks {
                    sources sourceSets.main, sourceSets.datagen
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}" // stable 1.16.4
    implementation "org.jetbrains:annotations:${jb_annotations_version}"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Techworks",
            "Specification-Vendor": "Techwroks",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Techworks",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Publication (not set up)

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}